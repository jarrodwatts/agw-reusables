/* eslint-disable @typescript-eslint/ban-ts-comment */
/* eslint-disable @typescript-eslint/no-explicit-any */
// @ts-nocheck
// This file is autogenerated by scripts/build-registry-index.ts
// Do not edit this file directly.
import * as React from "react"

export const Index: Record<string, any> = {
  "abstract-avatar": {
    name: "abstract-avatar",
    description: "An avatar component that displays user profile pictures from Abstract Portal with tier-based styling and loading states",
    type: "registry:component",
    registryDependencies: ["avatar","tooltip","skeleton"],
    files: [{
      path: "registry/new-york/blocks/abstract-avatar/abstract-avatar.tsx",
      type: "registry:component",
      target: ""
    }, {
      path: "registry/new-york/blocks/abstract-avatar/abstract-avatar-demo.tsx",
      type: "registry:component",
      target: ""
    }, {
      path: "registry/new-york/blocks/abstract-avatar/hooks/use-abstract-profile.ts",
      type: "registry:hook",
      target: ""
    }, {
      path: "registry/new-york/blocks/abstract-avatar/lib/fetch-json.ts",
      type: "registry:lib",
      target: ""
    }, {
      path: "registry/new-york/blocks/abstract-avatar/lib/tier-colors.ts",
      type: "registry:lib",
      target: ""
    }, {
      path: "registry/new-york/blocks/abstract-avatar/lib/address-utils.ts",
      type: "registry:lib",
      target: ""
    }, {
      path: "registry/new-york/blocks/abstract-avatar/lib/get-user-profile.ts",
      type: "registry:lib",
      target: ""
    }, {
      path: "app/api/user-profile/[address]/route.ts",
      type: "registry:page",
      target: "app/api/user-profile/[address]/route.ts"
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/new-york/blocks/abstract-avatar/abstract-avatar-demo.tsx")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || "abstract-avatar"
      return { default: mod.default || mod[exportName] }
    }),
    categories: undefined,
    meta: undefined,
  },
  "agw-provider": {
    name: "agw-provider",
    description: "Provider component that wraps your application with Abstract Global Wallet and React Query",
    type: "registry:component",
    registryDependencies: undefined,
    files: [{
      path: "registry/new-york/blocks/agw-provider/agw-provider.tsx",
      type: "registry:component",
      target: ""
    }, {
      path: "config/chain.ts",
      type: "registry:lib",
      target: "config/chain.ts"
    }, {
      path: "config/query-client.ts",
      type: "registry:lib",
      target: "config/query-client.ts"
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/new-york/blocks/agw-provider/agw-provider.tsx")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || "agw-provider"
      return { default: mod.default || mod[exportName] }
    }),
    categories: undefined,
    meta: undefined,
  },
  "complex-component": {
    name: "complex-component",
    description: "A complex component showing hooks, libs and components.",
    type: "registry:component",
    registryDependencies: ["card"],
    files: [{
      path: "registry/new-york/blocks/complex-component/page.tsx",
      type: "registry:page",
      target: "app/pokemon/page.tsx"
    }, {
      path: "registry/new-york/blocks/complex-component/components/pokemon-card.tsx",
      type: "registry:component",
      target: ""
    }, {
      path: "registry/new-york/blocks/complex-component/components/pokemon-image.tsx",
      type: "registry:component",
      target: ""
    }, {
      path: "registry/new-york/blocks/complex-component/lib/pokemon.ts",
      type: "registry:lib",
      target: ""
    }, {
      path: "registry/new-york/blocks/complex-component/hooks/use-pokemon.ts",
      type: "registry:hook",
      target: ""
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/new-york/blocks/complex-component/page.tsx")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || "complex-component"
      return { default: mod.default || mod[exportName] }
    }),
    categories: undefined,
    meta: undefined,
  },
  "connect-wallet-button": {
    name: "connect-wallet-button",
    description: "A connect wallet button using Abstract Global Wallet with dropdown menu when connected",
    type: "registry:component",
    registryDependencies: ["button","dropdown-menu"],
    files: [{
      path: "registry/new-york/blocks/connect-wallet-button/connect-wallet-button.tsx",
      type: "registry:component",
      target: ""
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/new-york/blocks/connect-wallet-button/connect-wallet-button.tsx")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || "connect-wallet-button"
      return { default: mod.default || mod[exportName] }
    }),
    categories: undefined,
    meta: undefined,
  },
  "example-form": {
    name: "example-form",
    description: "A contact form with Zod validation.",
    type: "registry:component",
    registryDependencies: ["button","input","label","textarea","card"],
    files: [{
      path: "registry/new-york/blocks/example-form/example-form.tsx",
      type: "registry:component",
      target: ""
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/new-york/blocks/example-form/example-form.tsx")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || "example-form"
      return { default: mod.default || mod[exportName] }
    }),
    categories: undefined,
    meta: undefined,
  },
  "example-with-css": {
    name: "example-with-css",
    description: "A login form with a CSS file.",
    type: "registry:component",
    registryDependencies: undefined,
    files: [{
      path: "registry/new-york/blocks/example-with-css/example-card.tsx",
      type: "registry:component",
      target: ""
    }, {
      path: "registry/new-york/blocks/example-with-css/example-card.css",
      type: "registry:component",
      target: ""
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/new-york/blocks/example-with-css/example-card.tsx")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || "example-with-css"
      return { default: mod.default || mod[exportName] }
    }),
    categories: undefined,
    meta: undefined,
  },
  "hello-world": {
    name: "hello-world",
    description: "A simple hello world component",
    type: "registry:component",
    registryDependencies: undefined,
    files: [{
      path: "registry/new-york/blocks/hello-world/hello-world.tsx",
      type: "registry:component",
      target: ""
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/new-york/blocks/hello-world/hello-world.tsx")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || "hello-world"
      return { default: mod.default || mod[exportName] }
    }),
    categories: undefined,
    meta: undefined,
  },
  "siwe-button": {
    name: "siwe-button",
    description: "A streamlined SIWE authentication button that handles wallet connection, message signing, and authentication state",
    type: "registry:component",
    registryDependencies: ["button","card","sonner","dropdown-menu"],
    files: [{
      path: "registry/new-york/blocks/siwe-button/siwe-button.tsx",
      type: "registry:component",
      target: ""
    }, {
      path: "registry/new-york/blocks/siwe-button/siwe-button-demo.tsx",
      type: "registry:component",
      target: ""
    }, {
      path: "registry/new-york/blocks/siwe-button/hooks/use-siwe-auth-query.ts",
      type: "registry:hook",
      target: ""
    }, {
      path: "registry/new-york/blocks/siwe-button/hooks/use-siwe-sign-in-mutation.ts",
      type: "registry:hook",
      target: ""
    }, {
      path: "registry/new-york/blocks/siwe-button/hooks/use-siwe-logout-mutation.ts",
      type: "registry:hook",
      target: ""
    }, {
      path: "registry/new-york/blocks/siwe-button/lib/types.ts",
      type: "registry:lib",
      target: ""
    }, {
      path: "config/auth.ts",
      type: "registry:lib",
      target: "config/auth.ts"
    }, {
      path: "config/chain.ts",
      type: "registry:lib",
      target: "config/chain.ts"
    }, {
      path: "registry/new-york/blocks/siwe-button/lib/auth-server.ts",
      type: "registry:lib",
      target: ""
    }, {
      path: "app/api/auth/nonce/route.ts",
      type: "registry:page",
      target: "app/api/auth/nonce/route.ts"
    }, {
      path: "app/api/auth/verify/route.ts",
      type: "registry:page",
      target: "app/api/auth/verify/route.ts"
    }, {
      path: "app/api/auth/user/route.ts",
      type: "registry:page",
      target: "app/api/auth/user/route.ts"
    }, {
      path: "app/api/auth/logout/route.ts",
      type: "registry:page",
      target: "app/api/auth/logout/route.ts"
    }, {
      path: "registry/new-york/blocks/connect-wallet-button/connect-wallet-button.tsx",
      type: "registry:component",
      target: ""
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/new-york/blocks/siwe-button/siwe-button.tsx")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || "siwe-button"
      return { default: mod.default || mod[exportName] }
    }),
    categories: undefined,
    meta: undefined,
  },
}