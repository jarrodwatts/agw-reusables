/* eslint-disable @typescript-eslint/ban-ts-comment */
/* eslint-disable @typescript-eslint/no-explicit-any */
// @ts-nocheck
// This file is autogenerated by scripts/build-registry-index.ts
// Do not edit this file directly.
import * as React from "react"

export const Index: Record<string, any> = {
  "complex-component": {
    name: "complex-component",
    description: "A complex component showing hooks, libs and components.",
    type: "registry:component",
    registryDependencies: ["card"],
    files: [{
      path: "registry/new-york/blocks/complex-component/page.tsx",
      type: "registry:page",
      target: "app/pokemon/page.tsx"
    }, {
      path: "registry/new-york/blocks/complex-component/components/pokemon-card.tsx",
      type: "registry:component",
      target: ""
    }, {
      path: "registry/new-york/blocks/complex-component/components/pokemon-image.tsx",
      type: "registry:component",
      target: ""
    }, {
      path: "registry/new-york/blocks/complex-component/lib/pokemon.ts",
      type: "registry:lib",
      target: ""
    }, {
      path: "registry/new-york/blocks/complex-component/hooks/use-pokemon.ts",
      type: "registry:hook",
      target: ""
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/new-york/blocks/complex-component/page.tsx")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || "complex-component"
      return { default: mod.default || mod[exportName] }
    }),
    categories: undefined,
    meta: undefined,
  },
  "example-form": {
    name: "example-form",
    description: "A contact form with Zod validation.",
    type: "registry:component",
    registryDependencies: ["button","input","label","textarea","card"],
    files: [{
      path: "registry/new-york/blocks/example-form/example-form.tsx",
      type: "registry:component",
      target: ""
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/new-york/blocks/example-form/example-form.tsx")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || "example-form"
      return { default: mod.default || mod[exportName] }
    }),
    categories: undefined,
    meta: undefined,
  },
  "example-with-css": {
    name: "example-with-css",
    description: "A login form with a CSS file.",
    type: "registry:component",
    registryDependencies: undefined,
    files: [{
      path: "registry/new-york/blocks/example-with-css/example-card.tsx",
      type: "registry:component",
      target: ""
    }, {
      path: "registry/new-york/blocks/example-with-css/example-card.css",
      type: "registry:component",
      target: ""
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/new-york/blocks/example-with-css/example-card.tsx")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || "example-with-css"
      return { default: mod.default || mod[exportName] }
    }),
    categories: undefined,
    meta: undefined,
  },
  "hello-world": {
    name: "hello-world",
    description: "A simple hello world component",
    type: "registry:component",
    registryDependencies: ["button"],
    files: [{
      path: "registry/new-york/blocks/hello-world/hello-world.tsx",
      type: "registry:component",
      target: ""
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/new-york/blocks/hello-world/hello-world.tsx")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || "hello-world"
      return { default: mod.default || mod[exportName] }
    }),
    categories: undefined,
    meta: undefined,
  },
}