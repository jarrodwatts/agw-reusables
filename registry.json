{
  "$schema": "https://ui.shadcn.com/schema/registry.json",
  "name": "agw-reusables",
  "homepage": "https://agw-reusables.vercel.app",
  "items": [
    {
      "name": "hello-world",
      "type": "registry:component",
      "title": "Hello World",
      "description": "A simple hello world component",
      "files": [
        {
          "path": "registry/new-york/blocks/hello-world/hello-world.tsx",
          "type": "registry:component"
        }
      ]
    },
    {
      "name": "example-form",
      "type": "registry:component",
      "title": "Example Form",
      "description": "A contact form with Zod validation.",
      "dependencies": ["zod"],
      "registryDependencies": ["button", "input", "label", "textarea", "card"],
      "files": [
        {
          "path": "registry/new-york/blocks/example-form/example-form.tsx",
          "type": "registry:component"
        }
      ]
    },
    {
      "name": "complex-component",
      "type": "registry:component",
      "title": "Complex Component",
      "description": "A complex component showing hooks, libs and components.",
      "registryDependencies": ["card"],
      "files": [
        {
          "path": "registry/new-york/blocks/complex-component/page.tsx",
          "type": "registry:page",
          "target": "app/pokemon/page.tsx"
        },
        {
          "path": "registry/new-york/blocks/complex-component/components/pokemon-card.tsx",
          "type": "registry:component"
        },
        {
          "path": "registry/new-york/blocks/complex-component/components/pokemon-image.tsx",
          "type": "registry:component"
        },
        {
          "path": "registry/new-york/blocks/complex-component/lib/pokemon.ts",
          "type": "registry:lib"
        },
        {
          "path": "registry/new-york/blocks/complex-component/hooks/use-pokemon.ts",
          "type": "registry:hook"
        }
      ]
    },
    {
      "name": "example-with-css",
      "type": "registry:component",
      "title": "Example with CSS",
      "description": "A login form with a CSS file.",
      "files": [
        {
          "path": "registry/new-york/blocks/example-with-css/example-card.tsx",
          "type": "registry:component"
        },
        {
          "path": "registry/new-york/blocks/example-with-css/example-card.css",
          "type": "registry:component"
        }
      ]
    },
    {
      "name": "connect-wallet-button",
      "type": "registry:component",
      "title": "Connect Wallet Button",
      "description": "A connect wallet button using Abstract Global Wallet with dropdown menu when connected",
      "dependencies": [
        "@abstract-foundation/agw-react",
        "@abstract-foundation/agw-client",
        "wagmi",
        "viem",
        "@tanstack/react-query"
      ],
      "registryDependencies": ["button", "dropdown-menu"],
      "files": [
        {
          "path": "registry/new-york/blocks/connect-wallet-button/connect-wallet-button.tsx",
          "type": "registry:component"
        }
      ]
    },
    {
      "name": "abstract-avatar",
      "type": "registry:component",
      "title": "Abstract Avatar",
      "description": "An avatar component that displays user profile pictures from Abstract Portal with tier-based styling and loading states",
      "dependencies": [
        "@tanstack/react-query",
        "wagmi",
        "viem"
      ],
      "registryDependencies": ["avatar", "tooltip", "skeleton"],
      "files": [
        {
          "path": "registry/new-york/blocks/abstract-avatar/abstract-avatar.tsx",
          "type": "registry:component"
        },
        {
          "path": "registry/new-york/blocks/abstract-avatar/abstract-avatar-demo.tsx",
          "type": "registry:component"
        },
        {
          "path": "registry/new-york/blocks/abstract-avatar/hooks/use-abstract-profile.ts",
          "type": "registry:hook"
        },
        {
          "path": "registry/new-york/blocks/abstract-avatar/lib/fetch-json.ts",
          "type": "registry:lib"
        },
        {
          "path": "registry/new-york/blocks/abstract-avatar/lib/tier-colors.ts",
          "type": "registry:lib"
        },
        {
          "path": "registry/new-york/blocks/abstract-avatar/lib/address-utils.ts",
          "type": "registry:lib"
        },
        {
          "path": "registry/new-york/blocks/abstract-avatar/lib/get-user-profile.ts",
          "type": "registry:lib"
        },
        {
          "path": "app/api/user-profile/[address]/route.ts",
          "type": "registry:page",
          "target": "app/api/user-profile/[address]/route.ts"
        }
      ]
    },
    {
      "name": "siwe-auth",
      "type": "registry:component",
      "title": "Sign-in with Ethereum Auth",
      "description": "A comprehensive authentication component using Sign-in with Ethereum (SIWE) with Iron Session for secure wallet-based authentication",
      "dependencies": [
        "iron-session",
        "viem",
        "wagmi",
        "@tanstack/react-query",
        "sonner"
      ],
      "registryDependencies": ["button", "card", "sonner", "dropdown-menu"],
      "envVars": {
        "IRON_SESSION_PASSWORD": ""
      },
      "files": [
        {
          "path": "registry/new-york/blocks/siwe-auth/siwe-auth.tsx",
          "type": "registry:component"
        },
        {
          "path": "registry/new-york/blocks/siwe-auth/hooks/use-siwe-auth-query.ts",
          "type": "registry:hook"
        },
        {
          "path": "registry/new-york/blocks/siwe-auth/hooks/use-siwe-sign-in-mutation.ts",
          "type": "registry:hook"
        },
        {
          "path": "registry/new-york/blocks/siwe-auth/hooks/use-siwe-logout-mutation.ts",
          "type": "registry:hook"
        },
        {
          "path": "registry/new-york/blocks/siwe-auth/lib/types.ts",
          "type": "registry:lib"
        },
        {
          "path": "registry/new-york/blocks/siwe-auth/lib/config.ts",
          "type": "registry:lib"
        },
        {
          "path": "registry/new-york/blocks/siwe-auth/lib/auth-server.ts",
          "type": "registry:lib"
        },
        {
          "path": "app/api/auth/nonce/route.ts",
          "type": "registry:page",
          "target": "app/api/auth/nonce/route.ts"
        },
        {
          "path": "app/api/auth/verify/route.ts",
          "type": "registry:page",
          "target": "app/api/auth/verify/route.ts"
        },
        {
          "path": "app/api/auth/user/route.ts",
          "type": "registry:page",
          "target": "app/api/auth/user/route.ts"
        },
        {
          "path": "app/api/auth/logout/route.ts",
          "type": "registry:page",
          "target": "app/api/auth/logout/route.ts"
        },
        {
          "path": "registry/new-york/blocks/connect-wallet-button/connect-wallet-button.tsx",
          "type": "registry:component"
        }
      ]
    }
  ]
}
