{
  "$schema": "https://ui.shadcn.com/schema/registry.json",
  "name": "agw-reusables",
  "homepage": "https://agw-reusables.vercel.app",
  "items": [
    {
      "name": "connect-wallet-button",
      "type": "registry:component",
      "title": "Connect Wallet Button",
      "description": "A connect wallet button using Abstract Global Wallet with dropdown menu when connected",
      "dependencies": [
        "@abstract-foundation/agw-react",
        "@abstract-foundation/agw-client",
        "wagmi",
        "viem",
        "@tanstack/react-query"
      ],
      "registryDependencies": [
        "button",
        "dropdown-menu"
      ],
      "files": [
        {
          "path": "registry/new-york/blocks/connect-wallet-button/connect-wallet-button.tsx",
          "type": "registry:component"
        }
      ]
    },
    {
      "name": "abstract-profile",
      "type": "registry:component",
      "title": "Abstract Profile",
      "description": "A profile component that displays user profile pictures from Abstract Portal with tier-based styling and loading states",
      "dependencies": [
        "@tanstack/react-query",
        "wagmi",
        "viem"
      ],
      "registryDependencies": [
        "avatar",
        "tooltip",
        "skeleton"
      ],
      "files": [
        {
          "path": "registry/new-york/blocks/abstract-profile/abstract-profile.tsx",
          "type": "registry:component"
        },
        {
          "path": "registry/new-york/blocks/abstract-profile/hooks/use-abstract-profile.ts",
          "type": "registry:hook"
        },
        {
          "path": "registry/new-york/blocks/abstract-profile/lib/tier-colors.ts",
          "type": "registry:lib"
        },
        {
          "path": "registry/new-york/blocks/abstract-profile/lib/address-utils.ts",
          "type": "registry:lib"
        },
        {
          "path": "registry/new-york/blocks/abstract-profile/lib/get-user-profile.ts",
          "type": "registry:lib"
        },
        {
          "path": "app/api/user-profile/[address]/route.ts",
          "type": "registry:page",
          "target": "app/api/user-profile/[address]/route.ts"
        }
      ]
    },
    {
      "name": "agw-provider",
      "type": "registry:component",
      "title": "AGW Provider",
      "description": "Provider component that wraps your application with Abstract Global Wallet and React Query",
      "dependencies": [
        "@abstract-foundation/agw-react",
        "@abstract-foundation/agw-client",
        "wagmi",
        "viem",
        "@tanstack/react-query"
      ],
      "registryDependencies": [
        "sonner"
      ],
      "files": [
        {
          "path": "registry/new-york/blocks/agw-provider/agw-provider.tsx",
          "type": "registry:component"
        },
        {
          "path": "config/chain.ts",
          "type": "registry:lib",
          "target": "config/chain.ts"
        },
        {
          "path": "config/viem-clients.ts",
          "type": "registry:lib",
          "target": "config/viem-clients.ts"
        }
      ]
    },
    {
      "name": "siwe-button",
      "type": "registry:component",
      "title": "SIWE Button",
      "description": "A streamlined SIWE authentication button that handles wallet connection, message signing, and authentication state",
      "dependencies": [
        "iron-session",
        "viem",
        "wagmi",
        "@tanstack/react-query",
        "sonner"
      ],
      "registryDependencies": [
        "button",
        "card",
        "sonner",
        "dropdown-menu"
      ],
      "envVars": {
        "IRON_SESSION_PASSWORD": ""
      },
      "files": [
        {
          "path": "registry/new-york/blocks/siwe-button/siwe-button.tsx",
          "type": "registry:component"
        },
        {
          "path": "registry/new-york/blocks/siwe-button/hooks/use-siwe-auth-query.ts",
          "type": "registry:hook"
        },
        {
          "path": "registry/new-york/blocks/siwe-button/hooks/use-siwe-sign-in-mutation.ts",
          "type": "registry:hook"
        },
        {
          "path": "registry/new-york/blocks/siwe-button/hooks/use-siwe-logout-mutation.ts",
          "type": "registry:hook"
        },
        {
          "path": "registry/new-york/blocks/siwe-button/lib/types.ts",
          "type": "registry:lib"
        },
        {
          "path": "config/auth.ts",
          "type": "registry:lib",
          "target": "config/auth.ts"
        },
        {
          "path": "config/chain.ts",
          "type": "registry:lib",
          "target": "config/chain.ts"
        },
        {
          "path": "registry/new-york/blocks/siwe-button/lib/auth-server.ts",
          "type": "registry:lib"
        },
        {
          "path": "app/api/auth/nonce/route.ts",
          "type": "registry:page",
          "target": "app/api/auth/nonce/route.ts"
        },
        {
          "path": "app/api/auth/verify/route.ts",
          "type": "registry:page",
          "target": "app/api/auth/verify/route.ts"
        },
        {
          "path": "app/api/auth/user/route.ts",
          "type": "registry:page",
          "target": "app/api/auth/user/route.ts"
        },
        {
          "path": "app/api/auth/logout/route.ts",
          "type": "registry:page",
          "target": "app/api/auth/logout/route.ts"
        },
        {
          "path": "registry/new-york/blocks/connect-wallet-button/connect-wallet-button.tsx",
          "type": "registry:component"
        }
      ]
    },
    {
      "name": "session-keys",
      "type": "registry:component",
      "title": "Session Key Button",
      "description": "A comprehensive session key management button that handles creation, validation, and revocation of Abstract Global Wallet session keys",
      "dependencies": [
        "@abstract-foundation/agw-react",
        "@abstract-foundation/agw-client",
        "wagmi",
        "viem",
        "@tanstack/react-query",
        "sonner"
      ],
      "registryDependencies": [
        "button",
        "dropdown-menu"
      ],
      "files": [
        {
          "path": "registry/new-york/blocks/session-keys/session-key-button.tsx",
          "type": "registry:component"
        },
        {
          "path": "registry/new-york/blocks/session-keys/hooks/use-session-key.ts",
          "type": "registry:hook"
        },
        {
          "path": "registry/new-york/blocks/session-keys/hooks/use-create-session-key.ts",
          "type": "registry:hook"
        },
        {
          "path": "registry/new-york/blocks/session-keys/hooks/use-revoke-session-key.ts",
          "type": "registry:hook"
        },
        {
          "path": "registry/new-york/blocks/session-keys/lib/get-stored-session-key.ts",
          "type": "registry:lib"
        },
        {
          "path": "registry/new-york/blocks/session-keys/lib/create-and-store-session-key.ts",
          "type": "registry:lib"
        },
        {
          "path": "registry/new-york/blocks/session-keys/lib/clear-stored-session-key.ts",
          "type": "registry:lib"
        },
        {
          "path": "registry/new-york/blocks/session-keys/lib/session-encryption-utils.ts",
          "type": "registry:lib"
        },
        {
          "path": "registry/new-york/blocks/session-keys/lib/validate-session-key.ts",
          "type": "registry:lib"
        },
        {
          "path": "config/session-key-policies.ts",
          "type": "registry:lib",
          "target": "config/session-key-policies.ts"
        },
        {
          "path": "config/viem-clients.ts",
          "type": "registry:lib",
          "target": "config/viem-clients.ts"
        },
        {
          "path": "registry/new-york/blocks/connect-wallet-button/connect-wallet-button.tsx",
          "type": "registry:component"
        }
      ]
    }
  ]
}